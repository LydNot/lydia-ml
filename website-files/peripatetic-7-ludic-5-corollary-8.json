{
  "title": "\"peripatetic: 7; ludic: 5; corollary: 8\"",
  "date": "\"April 30, 2025\"",
  "subtitle": "wordscraping",
  "category": "\"technology & society\"",
  "content": "<p>I’ve been maintaining a <a href=\"https://docs.google.com/document/d/11vSxpEnDLOeAo-m05NXvuiFtiYO2grQaHt5R0bWewkY/edit?usp=sharing\">list</a> of all the new words I encounter for the past five years.</p>\n<p>The issue is that I don’t remember all the words perfectly, so I’m sure there are some duplicates. But the document is over 100 pages long.</p>\n<p>I’d like to track/clean/count/remove duplicates. It was surprisingly easy to write a <a href=\"https://github.com/LydNot/deduplicate/blob/main/deduplicate.py\">script</a> for this!</p>\n<p>When I first conceived of this script, I supposed I’d have to implement some convoluted logic—appending words to a list, cross-checking whether each new word is already on the list, and only appending it if that’s not the case.</p>\n<p>But there’s actually a far simpler way! Sets don’t include duplicates, whereas lists do. So I was able to just create a set() and let that take care of collecting unique words.</p>\n<p>27% of my words were duplicates. The most common:</p>\n<p>These are the words I encountered most frequently and initially struggled to retain. Some of them seem funny now—they include words I use ~frequently (corollary, vignette, litany) and some of my favorite words (dichotomy, ludic, peripatetic)!</p>\n<p>I always had the sense that Python was supposed to be an everyday/scripting language, but I’ve been underexploiting that modality. It’s pretty cool! I’m pleasantly surprised Google’s APIs are so easy to use, as well.</p>\n<p>I hope to write more scripts and share them here.</p>\n<hr />\n<p><em>Originally published on <a href=\"https://lydianottingham.substack.com/p/peripatetic-7-ludic-5-corollary-8\">Substack</a></em></p>"
}